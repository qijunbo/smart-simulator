<?xml version="1.0" encoding="UTF-8"?>
<!-- scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。 scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 
	debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration scan="true" scanPeriod="10 seconds" debug="false">

	<!--上下文名称，应用不同，此名称不同 -->
	<contextName>smart-simulator</contextName>
	<property name="APP_LOG_HOME" scope="context" value="./simulator-log" />
	<!-- 控制台输出 -->
	<!-- 控制台输出日志 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<layout class="ch.qos.logback.classic.PatternLayout">
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{30}.%method&lt;%line&gt;:%n%msg%n</pattern>
		</layout>
	</appender>

	<!-- 用户访问正常日志，按照每天生成日志文件,最多保留30天,每天文件不超过100M,如果超过100M则切分 -->
	<appender name="APP_FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${APP_LOG_HOME}/simulator.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${APP_LOG_HOME}/simulator.%d{yyyy-MM-dd}.%i.log
			</FileNamePattern>
			<MaxHistory>30</MaxHistory>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>1MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
			<layout class="ch.qos.logback.classic.PatternLayout">
				<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{30}.%method&lt;%line&gt;:%n%msg%n</pattern>
			</layout>
		</encoder>
	</appender>

	<root level="INFO">
		<appender-ref ref="APP_FILE" />
	</root>
	<logger name="org.simulator" additivity="false">
		<level value="TRACE" />
		<appender-ref ref="APP_FILE" />
	</logger>
	<logger name="org.apache.wink.server.internal.log" additivity="false">
		<level value="DEBUG" />
		<appender-ref ref="STDOUT" />
	</logger>

</configuration>

